parameters: 
  - name: servicePrincipal
    type: string
  - name: environment
    type: string

jobs: 
  - job: SystemIntegrationTests
    displayName: "System Integration Tests"
    dependsOn: 
      - ValidateAndDeploy
    variables:
      - name: BUNDLE_VAR
        value: $[ dependencies.ValidateAndDeploy.outputs['setEnvVars.BUNDLE_VAR'] ]
      - template: ../../variables.yml
        parameters:
          environment: ${{ parameters.environment }}
    ${{ if eq(parameters.environment, 'tst') }}:
      pool: 
        name: 'vmss-shared'
    steps:
      - script: |   
          # Exit immediately if any command fails
          set -e

          # Install the Databricks CLI
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
        displayName: "Install Agent Requirements"
      
      - template: ../databricks_azure_cli.yml
        parameters:
          servicePrincipal: ${{ parameters.servicePrincipal }}
          description: "Run System Integration Tests"
          inlineScript: |
            ls resources/*.yml | xargs -n 1 basename | sed 's/\.yml$//' > bundle_names.txt
            declare -a pids
            declare -a statuses
            
            for bundle_name in $(cat bundle_names.txt); do
              clean_name="${bundle_name%.job}"
              if [[ "$clean_name" == *pytest* ]]; then
                echo "Skipping bundle: $clean_name (contains 'pytest')"
                continue
              fi
              echo "Running bundle: $clean_name"
              databricks bundle run -t ${{ parameters.environment}} "$clean_name" --refresh-all --var=$(BUNDLE_VAR)&
              pids+=($!)
            done

            # Wait for all jobs and collect exit codes
            for pid in "${pids[@]}"; do
              wait $pid
              statuses+=($?)
            done

            # Check if any job failed
            for status in "${statuses[@]}"; do
              if [[ $status -ne 0 ]]; then
                echo "One or more bundle runs failed."
                exit 1
              fi
            done