parameters:
  - name: environment
    type: string

stages:
  - stage: DEV
    displayName: "DEV"
    jobs:
      - job: DEV
        displayName: "Deploy DEV"
        variables:
          - template: variables.yml
            parameters:
              environment: ${{ parameters.environment }}

        steps:
          - script: |
              echo "Installing Requirements"
              curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
              pip install uv pylint yamllint
            displayName: "Install Agent Requirements"

          - script: |
              echo "Setting Environment Variables"
              set -e
              export DATABRICKS_HOST=$(DATABRICKS_HOST)
              export ENVIRONMENT=$(ENVIRONMENT)
            displayName: "Setting Environment Variables"

          - script: |
              echo "Running Pylint"
              pylint src/ --rcfile=.pylintrc --exit-zero
            displayName: "Run PyLint"
      
          - script: |
              echo "Running Yaml Lint"
              yamllint -c .yamllint . || true
            displayName: "Run YamlLint"

          - task: AzureCLI@2
            condition: succeeded()
            displayName: "Validate Databricks Bundle"
            inputs:
              azureSubscription: $(SPN_DEV_ID) # BUG - https://github.com/microsoft/azure-pipelines-tasks/issues/17218
              useGlobalConfig: true
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Validating Databricks Bundle"
                databricks bundle validate --var="environment=$(ENVIRONMENT)"
          
          - task: AzureCLI@2
            condition: succeeded()
            displayName: "Deploy Databricks Bundle"
            inputs:
              azureSubscription: $(SPN_DEV_ID)
              useGlobalConfig: true
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Deploying Databricks Bundle"
                databricks bundle deploy --var="environment=$(ENVIRONMENT)"
          
          - task: AzureCLI@2
            condition: succeeded()
            displayName: "Unit Tests"
            inputs:
              azureSubscription: $(SPN_DEV_ID)
              useGlobalConfig: true
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                databricks bundle run jb_pytest --var="environment=$(ENVIRONMENT)"

