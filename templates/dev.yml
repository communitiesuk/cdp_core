stages:
  - stage: DEV
    displayName: "DEV"
    jobs:
      - job: DEV
        displayName: "Deploy DEV"
        steps:
          - script: |
              echo "Installing Requirements"
              curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
              pip install uv pylint yamllint
            displayName: "Install Agent Requirements"

          - script: |
              echo "Running Pylint"
              pylint src/ --rcfile=.pylintrc --exit-zero
            displayName: "Run PyLint"
      
          - script: |
              echo "Running Yaml Lint"
              yamllint -c .yamllint . || true
            displayName: "Run YamlLint"

          - task: AzureCLI@2
            condition: succeeded()
            displayName: "Validate Databricks Bundle"
            inputs:
              azureSubscription: $(SPN_ID)
              useGlobalConfig: true
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                set -e
                export DATABRICKS_HOST=$(DATABRICKS_HOST)
                echo "Validating Databricks Bundle"
                databricks bundle validate 
          
          - task: AzureCLI@2
            condition: succeeded()
            displayName: "Deploy Databricks Bundle"
            inputs:
              azureSubscription: $(SPN_ID)
              useGlobalConfig: true
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                set -e
                echo "Deploying Databricks Bundle"
                export DATABRICKS_HOST=$(DATABRICKS_DEV_HOST)
                databricks bundle deploy --var="deploy_env=development"
          
          # - task: AzureCLI@2
          #   condition: succeeded()
          #   displayName: "Unit Tests"
          #   inputs:
          #     azureSubscription: $(SPN_ID)
          #     useGlobalConfig: true
          #     scriptType: bash
          #     scriptLocation: inlineScript
          #     inlineScript: |
          #       databricks jobs submit --json @unit_test.json --no-wait