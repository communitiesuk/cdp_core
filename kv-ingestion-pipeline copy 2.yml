trigger: none
pool:
  name: 'vmss-shared'
variables:
- group: kv-tst-core-cdp-vars
 
stages:
  - stage: AddSecretsToKeyVault
    displayName: 'Add secrets to Key Vault'
    jobs:
      - job: AddSecretsToKeyVault
        displayName: 'Add secrets to Key Vault'
        continueOnError: false
        steps:
          - task: AzureCLI@2
            displayName: 'Add secrets to Key Vault'
            env:
              AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
            inputs:
              azureSubscription: 'SPN-SP-sub-tst-ctdpslt001-001'
              useGlobalConfig: true
              scriptType: pscore
              scriptLocation: inlineScript
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              inlineScript: |
                $group_id = "$(az pipelines variable-group list --organization "$(System.CollectionUri)" --project "$(System.TeamProject)" --group-name "kv-tst-core-cdp-vars" --query '[0].id' -o json)"
                $ado_vars = "$(az pipelines variable-group variable list --organization "$(System.CollectionUri)" --project "$(System.TeamProject)" --group-id $group_id)"
                $map = $ado_vars | ConvertFrom-Json

                foreach ($prop in $map.PSObject.Properties) {

                    $adoName     = [string]$prop.Name
                    $envName     = ($adoName -replace '[^A-Za-z0-9]','_').ToUpper()
                    $envItem     = Get-Item -Path "Env:$envName" -ErrorAction SilentlyContinue
                    $secretName  = ($adoName -replace '_','-')

                    if (-not $envItem) {
                      Write-Warning "No value found for '$adoName' (expected Env:$envName). Is the variable group imported at this step/stage, and is the variable in scope?"
                      continue
                    }

                    $value = $envItem.Value

                    Write-Host "Writing variable $secretName to $(key_vault_name) with value $value"

                    az keyvault secret set `
                      --vault-name "$(key_vault_name)" `
                      --name $secretName `
                      --value $value `
                      --output none
                }
          